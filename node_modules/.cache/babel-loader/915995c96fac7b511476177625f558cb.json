{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front_end _CyberSoft\\\\CodeMau_Poker\\\\src\\\\pages\\\\Home\\\\index.jsx\";\nimport React, { useState, useCallback } from \"react\";\nimport Game from \"../Game\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\"; // import tất cả trong yup với tên đại diên là yup\n\nimport { useDispatch } from \"react-redux\";\nimport useStyle from \"./style\"; // return về 1 hook\n//set Validation\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(\"this field is require!\"),\n  email: yup.string().required(\"this field is required!\").email(\"Invalid email!\"),\n  phone: yup.string().required(\"this field is reuired!\").matches(/^[0-9]+$/g, \"Invalid phone number\") // schema cho phone dùnd regular expression(regEx) (cái biếu thức chính qui dành cho số)\n\n});\n\nconst Home = () => {\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const classes = useStyle();\n  const dispatch = useDispatch(); //const [a, setA] = useState();\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    validationSchema,\n    // do đật trùng tên nên viết 1 chữ th,\n    validateOnMount: true\n  }); // console.log(formik.values);\n\n  const setAllTouched = useCallback(() => {\n    Object.keys(formik.values).forEach(key => {\n      formik.setFieldTouched(key);\n    }); // Hàm key() này có tác dụng lấy từng key trong, r sau đó gán giá trị vào nhữn key đó\n  }, [formik]); //Hàm sau có tác dụng nếu giá trị trong nó thì nó sẽ thay đổi cái function đó\n  // hàm này nếu ko truyên gia strij vào và nhấn nút thì sẽ tự hiện ra lỗi,\n  //useCallback : chụp function lại lần đầu tirn , những lần au khi reder lại , nếu gtri sau đổi thì hàm đó sẽ dc tạo mới tại , ngước lại\n\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    setAllTouched(); // console.log(formik.values);\n\n    if (!formik.isValid) return;\n    setIsGameStarted(true);\n    dispatch({\n      type: \"ADD_PLAYERS\",\n      payload: { ...formik.values,\n        totalPoint: 25000,\n        cards: []\n      }\n    });\n  }, [formik, dispatch, setAllTouched]);\n  const setDefaultPlayer = useCallback(() => {\n    const defaultPlayer = {\n      username: \"poong\",\n      email: \"poooong@pooong.poooong\",\n      phone: \"12245\"\n    };\n    formik.setValues(defaultPlayer);\n  }, [formik]); // tạo hàm , gán giá trị vào fomik  , sau đó từ formik gắn giá trị vào ô input để hiện lên\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isGameStarted ? /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"diplay-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \" Welcome to Pocker Center\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Fill your info and start\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"w-25 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"username\",\n    value: formik.values.username,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"username\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), formik.touched.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, formik.errors.username), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"email\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), formik.touched.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, formik.errors.email), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    value: formik.values.phone,\n    name: \"phone\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"phone\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), formik.touched.phone && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, formik.errors.phone), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Start new Game\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: setDefaultPlayer,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Set Default Player\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/Front_end _CyberSoft/CodeMau_Poker/src/pages/Home/index.jsx"],"names":["React","useState","useCallback","Game","useFormik","yup","useDispatch","useStyle","validationSchema","object","shape","username","string","required","email","phone","matches","Home","isGameStarted","setIsGameStarted","classes","dispatch","formik","initialValues","validateOnMount","setAllTouched","Object","keys","values","forEach","key","setFieldTouched","handleSubmit","e","preventDefault","isValid","type","payload","totalPoint","cards","setDefaultPlayer","defaultPlayer","setValues","width","height","display","flexDirection","alignItems","justifyContent","title","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Game from \"../Game\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\"; // import tất cả trong yup với tên đại diên là yup\nimport { useDispatch } from \"react-redux\";\nimport useStyle from \"./style\"; // return về 1 hook\n\n//set Validation\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(\"this field is require!\"),\n  email: yup\n    .string()\n    .required(\"this field is required!\")\n    .email(\"Invalid email!\"),\n  phone: yup\n    .string()\n    .required(\"this field is reuired!\")\n    .matches(/^[0-9]+$/g, \"Invalid phone number\"),\n  // schema cho phone dùnd regular expression(regEx) (cái biếu thức chính qui dành cho số)\n});\nconst Home = () => {\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const classes = useStyle();\n\n  const dispatch = useDispatch();\n\n  //const [a, setA] = useState();\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n    validationSchema, // do đật trùng tên nên viết 1 chữ th,\n    validateOnMount: true,\n  });\n  // console.log(formik.values);\n  const setAllTouched = useCallback(() => {\n    Object.keys(formik.values).forEach((key) => {\n      formik.setFieldTouched(key);\n    });\n\n    // Hàm key() này có tác dụng lấy từng key trong, r sau đó gán giá trị vào nhữn key đó\n  }, [formik]);\n  //Hàm sau có tác dụng nếu giá trị trong nó thì nó sẽ thay đổi cái function đó\n  // hàm này nếu ko truyên gia strij vào và nhấn nút thì sẽ tự hiện ra lỗi,\n  //useCallback : chụp function lại lần đầu tirn , những lần au khi reder lại , nếu gtri sau đổi thì hàm đó sẽ dc tạo mới tại , ngước lại\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setAllTouched();\n\n      // console.log(formik.values);\n      if (!formik.isValid) return;\n      setIsGameStarted(true);\n      dispatch({\n        type: \"ADD_PLAYERS\",\n        payload: { ...formik.values, totalPoint: 25000, cards: [] },\n      });\n    },\n    [formik, dispatch, setAllTouched]\n  );\n  const setDefaultPlayer = useCallback(() => {\n    const defaultPlayer = {\n      username: \"poong\",\n      email: \"poooong@pooong.poooong\",\n      phone: \"12245\",\n    };\n    formik.setValues(defaultPlayer);\n  }, [formik]);\n  // tạo hàm , gán giá trị vào fomik  , sau đó từ formik gắn giá trị vào ô input để hiện lên\n  return (\n    <>\n      {isGameStarted ? (\n        <Game></Game>\n      ) : (\n        <div\n          className=\"text-center\"\n          style={{\n            width: \"100vw\",\n            height: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <h1 className=\"diplay-4 mb-5\"> Welcome to Pocker Center</h1>\n          <h3 className={classes.title}>Fill your info and start</h3>\n          <form onSubmit={handleSubmit} className=\"w-25 mx-auto\">\n            <input\n              type=\"input\"\n              name=\"username\"\n              value={formik.values.username}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              placeholder=\"username\"\n              className=\"w-100 form-control mb-3\"\n            />\n            {formik.touched.username && (\n              <p className=\"text-danger\">{formik.errors.username}</p>\n            )}\n            {/* toán tử && có tác dụng : nếu vế đầu đúng thì xét đến vế 2, cả 2 đúng thì mới hiện ra */}\n            {/* Muốn sử dụng touched  cần sử dụng onBlur trên phầnn input */}\n            <input\n              type=\"input\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              placeholder=\"email\"\n              className=\"w-100 form-control mb-3\"\n            />\n            {formik.touched.email && (\n              <p className=\"text-danger\">{formik.errors.email}</p>\n            )}\n            <input\n              type=\"input\"\n              value={formik.values.phone}\n              name=\"phone\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              placeholder=\"phone\"\n              className=\"w-100 form-control mb-3\"\n            />\n            {formik.touched.phone && (\n              <p className=\"text-danger\">{formik.errors.phone}</p>\n            )}\n            <button className=\"btn btn-success\">Start new Game</button>\n            <button\n              className=\"btn btn-info\"\n              onClick={setDefaultPlayer}\n              type=\"button\"\n            >\n              Set Default Player\n            </button>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}